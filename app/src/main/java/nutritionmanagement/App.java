/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package nutritionmanagement;
import java.util.ArrayList;
import java.util.Scanner;

public class App {
    public static void main(String[] args) {
        NutritionAgency nutritionAgency = new NutritionAgency();
        ArrayList<Person> people = new ArrayList<Person>();
        Scanner myObj = new Scanner(System.in);
        String input = "";
        String age = "";
        String name = "";
        String activity = "";
        String updateInp = "";
        

        System.out.println("Welcome to the nutrition management simulator :");

        while (!input.equals("quit")) {
            System.out.println("Would you like to (create) a person, (update) the nutrition agency's reccomendations, (print), or (quit)");
            input = myObj.nextLine();

            if (input.equals("create")) {
                System.out.println("Is this person (elderly), (adult), (teen), or (child)");
                age = myObj.nextLine();
                System.out.println("Are they active, slightly active, or sedintary?");
                activity= myObj.nextLine();
                System.out.println("What is their name?");
                name = myObj.nextLine();

                if (age.equals("elderly")) {
                    if (activity.equals("active"))
                        people.add(new Elderly(name, new Active(nutritionAgency) ,nutritionAgency));
                    if (activity.equals("slightly active"))
                        people.add(new Elderly(name, new SlightlyActive(nutritionAgency) ,nutritionAgency));
                    if (activity.equals("sedintary"))
                        people.add(new Elderly(name, new Sedintary(nutritionAgency) ,nutritionAgency));   
                }

                if (age.equals("adult")) {
                    if (activity.equals("active"))
                        people.add(new Adult(name, new Active(nutritionAgency) ,nutritionAgency));
                    if (activity.equals("slightly active"))
                        people.add(new Adult(name, new SlightlyActive(nutritionAgency) ,nutritionAgency));
                    if (activity.equals("sedintary"))
                        people.add(new Adult(name, new Sedintary(nutritionAgency) ,nutritionAgency));   
                }

                if (age.equals("teen")) {
                    if (activity.equals("active"))
                        people.add(new Teen(name, new Active(nutritionAgency) ,nutritionAgency));
                    if (activity.equals("slightly active"))
                        people.add(new Teen(name, new SlightlyActive(nutritionAgency) ,nutritionAgency));
                    if (activity.equals("sedintary"))
                        people.add(new Teen(name, new Sedintary(nutritionAgency) ,nutritionAgency));   
                }

                if (age.equals("child")) {
                    if (activity.equals("active"))
                        people.add(new Child(name, new Active(nutritionAgency) ,nutritionAgency));
                    if (activity.equals("slightly active"))
                        people.add(new Child(name, new SlightlyActive(nutritionAgency) ,nutritionAgency));
                    if (activity.equals("sedintary"))
                        people.add(new Child(name, new Sedintary(nutritionAgency) ,nutritionAgency));   
                }
            }

            else if (input.equals("update")) {
                System.out.println("Would you like to update (calorie) reccomendations or (diet) reccomendations?");
                updateInp = myObj.nextLine();
                if (updateInp.equals("diet")) {
                    System.out.println("Would you like to update diet reccomendations for (elderly), (adult), (teen), or (child)");
                    updateInp = myObj.nextLine();

                    if (updateInp.equals("elderly")) {
                        System.out.println("Elderly people should eat:");
                        updateInp = myObj.nextLine();
                        nutritionAgency.setElderlyDietReccomendation(updateInp);;
                    }

                    if (updateInp.equals("adult")) {
                        System.out.println("Adults should eat:");
                        updateInp = myObj.nextLine();
                        nutritionAgency.setAdultDietReccomendation(updateInp);;
                    }

                    if (updateInp.equals("teen")) {
                        System.out.println("Teens should eat:");
                        updateInp = myObj.nextLine();
                        nutritionAgency.setTeenDietReccomendation(updateInp);;
                    }

                    if (updateInp.equals("child")) {
                        System.out.println("Children should eat:");
                        updateInp = myObj.nextLine();
                        nutritionAgency.setChildDietReccomendation(updateInp);;
                    }

                }
                if (updateInp.equals("calorie")) {

                    System.out.println("Would you like to update calorie reccomendations for (active), (slightly active) or (sedintary)");
                    updateInp = myObj.nextLine();

                    if (updateInp.equals("active")) {
                        System.out.println("Active people should eat how many calories a day?:");
                        updateInp = myObj.nextLine();
                        nutritionAgency.setActiveCalorieReccomendation(Integer.parseInt(updateInp));
                    }

                    if (updateInp.equals("slightly active")) {
                        System.out.println("Slightly active people should eat how many calories a day?:");
                        updateInp = myObj.nextLine();
                        nutritionAgency.setSlightlyActiveCalorieReccomendation(Integer.parseInt(updateInp));
                    }

                    if (updateInp.equals("sedintary")) {
                        System.out.println("Sedintary people should eat how many calories a day?:");
                        updateInp = myObj.nextLine();
                        nutritionAgency.setSedintaryCalorieReccomendation(Integer.parseInt(updateInp));
                    }
    
                }
            }

            else if (input.equals("print")) {

            System.out.println("People and reccomendations: ");
            for (int i = 0; i < people.size(); i++) {
            System.out.println(people.get(i).description());
        }

            }
        }
        myObj.close();
    }
}
